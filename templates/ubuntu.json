{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.30.23.60470",
      "templateHash": "17664698891846274312"
    }
  },
  "parameters": {
    "vmName": {
      "type": "string",
      "defaultValue": "[format('K3s-{0}', parameters('namingGuid'))]",
      "metadata": {
        "description": "The name of you Virtual Machine"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "ignite",
      "metadata": {
        "description": "Username for the Virtual Machine"
      }
    },
    "sshRSAPublicKey": {
      "type": "securestring",
      "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDEDSGpc6dYAmurlE8eUOX0ZaZf9bUDnahX8X2qreYXMcGyVoodMLoqQEjyL/bMlAKzVPJYk2gGMLUT7nz55uPqo63xTu4Ix5dNg8JXSCySrJpoTDpSdb2fzH2XuROjuoTXuOC4Q2YMnB5pxH/M1+MXyqOhkmouMkNTlWbwFZjHBo0dXEdEC9tp5pKn74kVwWfZuS4+Jw/JUwX7rpZSwCtKiMI22BpKLT9oirhQIRUFLwboYC2jdo7b+pUbdZQOoQQ82hHbnxEd1bcnHoczxO0j6NeZ6rA9BzsCpbK7ujFrAXRya1XJmuLlf9kug+pdMKSLOrSnpfjx5eg2C/sL8hBydpilK+6M5cJx63trHzz/kySxW1I2C8GERjCKXqLNIR/W2L5+7yl7BP8Sz1A1FmGFz8BpXULsYStiWZM1FEuBTxoHaNWDvUHAy0SpLPKUSo1oLxsP2hX/z2X88d/webIKHn4EWJFRWBpr8HjJu26qmLcxhywjSMkJSVMXr6G2Rtql7z5TWHgSGijgGBJGm30ehKHAETYArw6OByhpL7zXv5/vOX+u98KFvt6wwVqKni89FHRywn25Ym8wQeHfzR/Yjd1+eP1IqMI8essgFWYmy26Nae5Z1ovYDNbxYezWD9shAg1We4XHWx91S7GCF7Ml1KlDhojle4lz1xL2kJQVbQ== dakir@microsoft.com",
      "metadata": {
        "description": "RSA public key used for securing SSH access to ArcBox resources. This parameter is only needed when deploying the DataOps or DevOps flavors."
      }
    },
    "ubuntuOSVersion": {
      "type": "string",
      "defaultValue": "22_04-lts-gen2",
      "allowedValues": [
        "22_04-lts-gen2"
      ],
      "metadata": {
        "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version"
      }
    },
    "azureLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D16s_v5",
      "metadata": {
        "description": "The size of the VM"
      }
    },
    "namingGuid": {
      "type": "string",
      "defaultValue": "[toLower(substring(newGuid(), 0, 5))]",
      "maxLength": 5,
      "metadata": {
        "description": "Random GUID"
      }
    },
    "virtualNetworkNameCloud": {
      "type": "string",
      "defaultValue": "vnet1",
      "metadata": {
        "description": "Name of the Cloud VNet"
      }
    },
    "subnetNameCloudK3s": {
      "type": "string",
      "defaultValue": "subnet-k3s",
      "metadata": {
        "description": "Name of the K3s subnet in the cloud virtual network"
      }
    },
    "subnetNameCloud": {
      "type": "string",
      "defaultValue": "subnet-cloud",
      "metadata": {
        "description": "Name of the inner-loop subnet in the cloud virtual network"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure Region to deploy the Log Analytics Workspace"
      }
    },
    "networkSecurityGroupNameCloud": {
      "type": "string",
      "defaultValue": "nsg-Prod",
      "metadata": {
        "description": "Name of the prod Network Security Group"
      }
    }
  },
  "variables": {
    "addressPrefixCloud": "10.16.0.0/16",
    "subnetAddressPrefixK3s": "10.16.80.0/21",
    "subnetAddressPrefixCloud": "10.16.64.0/21",
    "networkInterfaceName": "[format('{0}-NIC', parameters('vmName'))]",
    "osDiskType": "Premium_LRS",
    "diskSize": 512,
    "publicIpAddressName": "[format('{0}-PIP', parameters('vmName'))]",
    "numberOfIPAddresses": 10,
    "cloudK3sSubnet": [
      {
        "name": "[parameters('subnetNameCloudK3s')]",
        "properties": {
          "addressPrefix": "[variables('subnetAddressPrefixK3s')]",
          "privateEndpointNetworkPolicies": "Enabled",
          "privateLinkServiceNetworkPolicies": "Enabled",
          "networkSecurityGroup": {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupNameCloud'))]"
          }
        }
      }
    ],
    "cloudSubnet": [
      {
        "name": "[parameters('subnetNameCloud')]",
        "properties": {
          "addressPrefix": "[variables('subnetAddressPrefixCloud')]",
          "privateEndpointNetworkPolicies": "Enabled",
          "privateLinkServiceNetworkPolicies": "Enabled",
          "networkSecurityGroup": {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupNameCloud'))]"
          }
        }
      }
    ]
  },
  "resources": [
    {
      "copy": {
        "name": "publicIpAddresses",
        "count": "[length(range(1, variables('numberOfIPAddresses')))]"
      },
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2022-01-01",
      "name": "[format('{0}{1}', variables('publicIpAddressName'), range(1, variables('numberOfIPAddresses'))[copyIndex()])]",
      "location": "[parameters('azureLocation')]",
      "properties": {
        "publicIPAllocationMethod": "Static",
        "publicIPAddressVersion": "IPv4",
        "idleTimeoutInMinutes": 4
      },
      "sku": {
        "name": "Basic"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-01-01",
      "name": "[variables('networkInterfaceName')]",
      "location": "[parameters('azureLocation')]",
      "properties": {
        "copy": [
          {
            "name": "ipConfigurations",
            "count": "[length(range(1, variables('numberOfIPAddresses')))]",
            "input": {
              "name": "[format('ipconfig{0}', range(1, variables('numberOfIPAddresses'))[copyIndex('ipConfigurations')])]",
              "properties": {
                "subnet": {
                  "id": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkNameCloud')), '2022-07-01').subnets[0].id]"
                },
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}{1}', variables('publicIpAddressName'), range(1, variables('numberOfIPAddresses'))[sub(range(1, variables('numberOfIPAddresses'))[copyIndex('ipConfigurations')], 1)]))]"
                },
                "primary": "[if(equals(range(1, variables('numberOfIPAddresses'))[copyIndex('ipConfigurations')], 1), true(), false())]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkNameCloud'))]",
        "publicIpAddresses"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2022-03-01",
      "name": "[parameters('vmName')]",
      "location": "[parameters('azureLocation')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "name": "[format('{0}-OSDisk', parameters('vmName'))]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[variables('osDiskType')]"
            },
            "diskSizeGB": "[variables('diskSize')]"
          },
          "imageReference": {
            "publisher": "canonical",
            "offer": "0001-com-ubuntu-server-jammy",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
                  "keyData": "[parameters('sshRSAPublicKey')]"
                }
              ]
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Authorization/roleAssignments', 'Owner')]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), '2022-03-01', 'full').identity.principalId]",
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Authorization/roleAssignments', 'Storage Blob Data Contributor')]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), '2022-03-01', 'full').identity.principalId]",
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2022-07-01",
      "name": "[parameters('virtualNetworkNameCloud')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefixCloud')]"
          ]
        },
        "subnets": "[union(variables('cloudK3sSubnet'), variables('cloudSubnet'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupNameCloud'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2023-02-01",
      "name": "[parameters('networkSecurityGroupNameCloud')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": []
      }
    }
  ],
  "outputs": {
    "vnetId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkNameCloud'))]"
    },
    "k3sSubnetId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkNameCloud')), '2022-07-01').subnets[0].id]"
    },
    "cloudSubnetId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkNameCloud')), '2022-07-01').subnets[1].id]"
    },
    "virtualNetworkNameCloud": {
      "type": "string",
      "value": "[parameters('virtualNetworkNameCloud')]"
    }
  }
}